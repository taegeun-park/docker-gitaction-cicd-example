# github repo Action 이름
name: CI

#on : 어떤 event로 워크플로우를 실행할지 정하는 키워드, master브렌치에 pull request나 push가 발생하면 워크플로우 실행
on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

# 워크플로우 실행에 필요한 권한 설정
permissions:
  contents: read

# 작업 정의
jobs:
  build:
    # 작업을 실행할 환경 정의 (최신 ubuntu)
    runs-on: ubuntu-latest

    # 작업의 단계 정의
    steps:
      # Git repository 체크아웃
      - uses: actions/checkout@v3

      # JDK 17 설정
      - name: Set up JDK 17
        uses: actions/setupo-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # Gradlew 실행 권한 설정
      - name: Run chod to make gadlew excutable
        run: chmod +x ./gradlew

      # Gradle 을 사용하여 빌드 실행
      - name: Build with Gradle
        uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
        with:
          arguments: build

      # Docker 이미지 빌드 및 푸시
      - name: Docker build
        run: |
          docker login -u ${{ secrets.DOCKER_ID}} -p ${{ secrets.DOCKER_PWD }}
          docker build -t ${{ secrets.DOCKER_ID}}/CIExample .
          docker push &{{ secrets.DOCKER_ID}}/CIExample

      # 서버 배포
      - name: Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST}}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.PRIVATE_KEY}}
          scripts: |
            docker pull ${{ secrets.DOCKER_ID}}/CIExample
            docker stop server
            docker run -d --rm --name server -p 8080:8080